Git quick lecture
========================================================
author: denis
date: 2016-05-03
autosize: true

Introduction
========================================================

- Version control tool
- Feature
- History

Introduction - Why Git?
========================================================

- Decenteralized.
- Fast.
- Full history record.

Installation
========================================================

- Linux.

```
  apt-get install git
```

- Mac.

```
  brew install git              # or
  port install git
```

- Windows.

  Here is the download address:　`https://git-scm.com/download/win`

Basic Conception
=======================================================

- Repository.
- Branch.
- Status.

Concepts Figure -- decentralize
========================================================

<div align="center"> <img src="./git_quick_lecture-figure/git_distribute.png"> </div>

Concepts Figure -- git file status
========================================================

![file status](./git_quick_lecture-figure/git-lifecycle.png)

Concepts Figure -- git branches
========================================================

<div align="center"> <img src="./git_quick_lecture-figure/git-branch.png"> </div>

Basic Manipulation
========================================================

```
  git init            # 初始化
  git clone           # clone一个仓库地址
  git add             # 添加文件
  git commit          # 将文件提交到暂存区
  git pull            # 同步远程仓库文件
  git push            # 将本地文件同步到远程仓库
```

**Note**: Keep your stage area clean.

Undo
========================================================

- before file commit

```
  git checkout -- filename
```

- after file commit

```
  git reset HEAD filename
  git log                              # 查看commit log id
  git reset --hard log_id
```

Branch
========================================================

- Create a branch and switch to that branch meanwhile.

```
  git checkout -b bname
```

- List branches and switch to selected branch.

```
  git branch                   # and
  git checkout bname
```

Merge
========================================================

- whole branch.

```
  git merge --no-ff -m "comments" feature_branch
```

- specific file or direcotry.

```
  git checkout feature_branch -- blabla/blabla
  git commit -m "comments"
```


Configuration
=========================================================

+ Keep your file line end with "\n", make sure your text/code editor's setting.

```
  git config --global core.autocrlf false
  git config --global core.safecrlf true
```

+ Authorized your identity.

```
  git config --global user.name denis
  git config --global user.email denis.deng@derbysoft.com
```

+ Cache your git repository password

```
  git config --global credential.helper cache
```

Keep synchronous with remote branch
=========================================================

Default branch master, other branch should,

```
  git checkout -b branch_name origin_branch_name
```

Use gitlab
=========================================================

- Visit the url: [http://10.200.106.36/](http://10.200.106.36/).

- Register and Login with your own derbysoft email account.

- Clone the repository at your local machine.

```
  git clone http://10.200.106.36/git/dplatform.git
```

  and create a `dev` local branch

```
  git checkout -b dev && git pull
```

- Keep your code commit and push to branch `dev`, and create merge request on gitlab page.
